[project]
name = "expiringdictx"
version = "1.0.1"
description = "提供一个带有过期时间的字典数据结构，适用于缓存和临时存储。"
readme = "README.md"
keywords = ["expire", "dict", "lru"]
authors = [{ name = "AzideCupric", email = "rukuy@qq.com" }]
license = { text = "MIT" }
requires-python = "<4,>=3.9"
dependencies = ["lru-dict<2.0.0,>=1.3.0"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "License :: OSI Approved :: MIT License",
]

[project.urls]
homepage = "https://github.com/AzideCupric/expiringdictx"
repository = "https://github.com/AzideCupric/expiringdictx"
documentation = "https://github.com/AzideCupric/expiringdictx"


[tool.pdm]
[tool.pdm.dev-dependencies]
lint = [
  "ruff<1.0.0,>=0.5.6",
  "isort<6.0.0,>=5.13.2",
  "black<25.0.0,>=24.8.0",
  "nonemoji<1.0.0,>=0.1.4",
  "pre-commit<4.0.0,>=3.8.0",
]
test = [
  "pytest<9.0.0,>=8.3.2",
  "pytest-cov<6.0.0,>=5.0.0",
  "pytest-mock<4.0.0,>=3.14.0",
  "pytest-xdist<4.0.0,>=3.6.1",
  "loguru<1.0.0,>=0.7.2",
]
dev = ["typing-extensions<5.0.0,>=4.12.2"]

[tool.pdm.build]
includes = ["expiringdictx"]
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 120
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
src_paths = ["nonebot", "tests"]
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
  "F",     # Pyflakes
  "W",     # pycodestyle warnings
  "E",     # pycodestyle errors
  "UP",    # pyupgrade
  "ASYNC", # flake8-async
  "C4",    # flake8-comprehensions
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "PYI",   # flake8-pyi
  "PT",    # flake8-pytest-style
  "Q",     # flake8-quotes
  "RUF",   # Ruff-specific rules
]
ignore = [
  "E402",   # module-import-not-at-top-of-file
  "UP037",  # quoted-annotation
  "RUF001", # ambiguous-unicode-character-string
  "RUF002", # ambiguous-unicode-character-docstring
  "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
  { root = "./tests", extraPaths = [
    "./",
  ] },
  { root = "./" },
]

typeCheckingMode = "standard"
reportShadowedImports = false
disableBytesTypePromotions = true
